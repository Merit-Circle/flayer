.image-title-container{
    margin-bottom: 20px;
}

$controlsWidth: 900px;
$superContainerMargin: 16px;

input[type="radio"]{
    margin-right: 14px;
    margin-left: 2px;
}
input[type="checkbox"]{
    margin-right: 16px;
}

.controls-toplevel-container{
    margin-bottom: 16px;
}

.controls-toplevel-container, .controls-secondlevel-container{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    width: $controlsWidth;
    max-width: 100%;
}

$controls_gutter: 20px;

.controls-secondlevel-container > div{
    flex-basis: calc(50% - #{$controls_gutter});
}
.controls-secondlevel-container > div:first-of-type{
    margin-right: $controls_gutter;
}

.controls{
    display: flex;
    flex-direction: column;
    align-items: center;
}


.controls-secondlevel-container .controls-panel > *{
    margin-bottom: 3px;
}

/*
* Canvases
*/
$canvasMargin: 25px;
//negative margin used to get margins between flex items
//while still getting alignment when they wrap
//https://stackoverflow.com/questions/20626685/better-way-to-set-distance-between-flexbox-items
.image-canvas-container{
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: $canvasMargin;
    margin-right: -1 * $canvasMargin;
}
.image-canvas-container canvas{
    margin-right: $canvasMargin;
    margin-bottom: $canvasMargin;
}


/*
* Color replace stuff
*/
.color-replace-super-container{
    margin-top: $superContainerMargin;
    padding: 5px;
}
.color-replace-title-container{
    margin-bottom: 4px;
}
input[type="color"]{
    margin-left: 14px;
    margin-right: 24px;
}



/*
* Color dither component controls
*/

.colors-list-container{
    display: flex;
    flex-wrap: wrap;
    
    input[type="color"]{
        margin: 0;
    }
    label{
        display: inline-block;
        min-width: 1.7em;
    }
    
    .color-container{
        flex-basis: 110px;
        margin: 0 16px 20px 0;
        border: 1px solid $border_color;
        border-radius: 5px;
        padding: 4px;
        cursor: move;
        
        &.dragged-over{
            border-color: $highlight_color;
            padding: 16px 4px;
        }
        
        &.dragged{
            opacity: 0.4;
        }
    }
}